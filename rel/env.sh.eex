#!/bin/sh

DIST=$(uname)

active_interfaces() {
  for i in $(ifconfig -lu | tr " " "\n" | sort -n | tr "\n" " "); do
    if ifconfig $i | grep -q "status: active"; then
      echo $i
    fi
  done
}

inet6_addrs() {
  declare interfaces=$1
  local iterator=0
  local addrs

  for i in $interfaces; do
    addr=$(ifconfig $i | grep -v "%$i" | grep inet6 | head -n 1 | awk '{ print $2 }')
    if test -n "${addr}"; then
      addrs[$iterator]="${addr}"
      let "iterator=iterator+1"
    fi
  done

  echo $addrs
}

ip_from_host() {
  local addr

  if [ "${DIST}" = "Linux" ]; then
    interfaces="$(ifconfig -s | tail -n +2 | awk '{ print $1 }')"
  elif [ "${DIST}" = "Darwin" ]; then
    interfaces="$(active_interfaces)"
  fi
  addrs=$(inet6_addrs "${interfaces}")
  addr=$(echo $addrs | cut -f 1)

  echo "${addr}"
}

# 1. Try to find the IP address if we're running in fly.io
# 2. Try to find the IP address from the system
#    * Depends on iproute2 package in Linux
# 3. Fall back to localhost
ip() {
  local addr
  
  addr=$(ip_from_host)
  if test -z "${addr}"; then addr="::1"; fi

  echo "${addr}"
}

app_name() {
  if test -n "${FLY_APP_NAME}"; then
    echo "${FLY_APP_NAME}";
  elif test -n "${APP_NAME}"; then
    echo "${APP_NAME}"
  else
    echo "herd"
  fi
}

release_node_name() {
  echo "$(app_name)@$(ip)"
}

node_name=$(release_node_name)

echo "Starting release at: ${node_name}" >&2

export RELEASE_DISTRIBUTION="name"
export RELEASE_NODE="${node_name}"
export ELIXIR_ERL_OPTIONS="-proto_dist inet6_tcp"
